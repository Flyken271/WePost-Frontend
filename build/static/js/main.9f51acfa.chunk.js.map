{"version":3,"sources":["Navbar.js","Footer1.js","Card1.js","Homepage.js","LoginPage.js","RegisterPage.js","LogoutPage.js","Userpage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar1","props","useState","isOpen","setIsOpen","Navbar","id","color","dark","expand","NavbarBrand","href","navbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","localStorage","getItem","Button","Footer1","NavbarText","style","Card1","link","Card","CardBody","CardImg","src","image","CardTitle","title","CardSubtitle","subTitle","CardText","content","Homepage","state","Channels","error","componentDidMount","a","axios","get","response","setState","data","setItem","JSON","stringify","this","map","channel","index","key","name","pfp","url","Badge","pill","rank","React","Component","LoginPage","email","username","password","handleEmail","bind","handleUsername","handlePassword","submitLogon","e","target","value","post","identifier","then","console","log","jwt","user","catch","setTimeout","Form","Label","for","Input","type","onChange","placeholder","RegisterPage","submitRegister","window","location","LogoutPage","removeItem","Userpage","parse","result","split","replace","projects","project","i","length","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9f51acfa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Button\r\n} from 'reactstrap';\r\n\r\n\r\nconst Navbar1 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar id=\"navbar1\" color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand id=\"navbarbrand1\" href=\"/\">{props.navbarBrand}</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n          </Nav>\r\n          {localStorage.getItem('token') == null && \r\n            <a href=\"/register\"><Button id=\"logbutton\" color=\"success\">Register</Button></a>\r\n          }\r\n          {localStorage.getItem('token') == null &&\r\n          <a href=\"/login\"><Button id=\"logbutton\" color=\"primary\">Login</Button></a>\r\n          }\r\n          {localStorage.getItem('token') != null &&\r\n            <a href=\"/logout\"><Button id=\"logbutton\" color=\"primary\">Log Out</Button></a>\r\n          }\r\n          \r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar1;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavbarText,\r\n} from 'reactstrap';\r\n\r\nconst Footer1 = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar id=\"Footer1\" color=\"dark\" dark expand=\"md\">\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n          <NavbarText><h4 style={{color: \"grey\"}}>All rights reserved. Copyright Â©</h4>by <a id=\"footerlink\" href=\"https://flyken.org\">Jared</a></NavbarText>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer1;","import React from 'react';\r\nimport {\r\n  Card, CardText, CardBody,\r\n  CardTitle, CardSubtitle, CardImg\r\n} from 'reactstrap';\r\n\r\nconst Card1 = (props) => {\r\n  return (\r\n    <div>\r\n      <a href={props.link}><Card id=\"serverStats\">\r\n        <CardBody>\r\n          <CardImg id=\"cardImg\" src={props.image} />\r\n          <CardTitle id=\"cardTitle\">{props.title}</CardTitle>\r\n          <CardSubtitle id=\"cardSub\">{props.subTitle}</CardSubtitle>\r\n          <CardText>{props.content}</CardText>\r\n        </CardBody>\r\n      </Card></a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card1;","import React from 'react';\r\nimport Card1 from './Card1';\r\nimport { Badge } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Homepage extends React.Component {\r\n\r\n    \r\n\r\n    state = {\r\n        Channels: [],\r\n        error: null,\r\n      }\r\n    \r\n      // Fetch your restaurants immediately after the component is mounted\r\n      componentDidMount = async () => {\r\n        try {\r\n          const response = await axios.get('http://98.237.41.63:1337/Channels');\r\n          this.setState({ Channels: response.data })\r\n          localStorage.setItem(\"channel\", JSON.stringify(this.state.Channels));\r\n        } catch(error) {\r\n          this.setState({ error })\r\n        }\r\n      }\r\n      render() {\r\n  return (\r\n      <div>\r\n            {localStorage.getItem('token') != null &&\r\n                <h3 id=\"navbarbrand2\">Welcome, {localStorage.getItem('username')}</h3>\r\n            }\r\n            {localStorage.getItem('token') == null && \r\n                <h3 id=\"navbarbrand2\">Welcome, Guest</h3>\r\n            }\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            {this.state.Channels.map((channel, index) => <Card1 key={index} link={\"/u/\"+this.state.Channels[index].name} image={'http://98.237.41.63:1337'+channel.pfp[0].url} title={channel.name} subTitle={<Badge color='success' pill>{channel.rank}</Badge>}/>)}\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport {\r\n    Form,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitLogon = this.submitLogon.bind(this);\r\n    }\r\n\r\n    handleEmail(e) {\r\n        this.setState({email: e.target.value});\r\n    }\r\n    handleUsername(e) {\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePassword(e) {\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    submitLogon() {\r\n        axios\r\n        .post('http://98.237.41.63:1337/auth/local', {\r\n            identifier: this.state.email,\r\n            password: this.state.password,\r\n        })\r\n        .then(response => {\r\n            // Handle success.\r\n            console.log('Well done!');\r\n            localStorage.setItem('token', response.data.jwt);\r\n            console.log(response.data)\r\n            localStorage.setItem('username', response.data.user.username)\r\n            //console.log('User profile', response.data.user);\r\n            //console.log('User token', response.data.jwt);\r\n        })\r\n        .catch(error => {\r\n            // Handle error.\r\n            console.log('An error occurred:', error.response);\r\n        });\r\n        setTimeout(() => {\r\n            //window.location.href = \"/\";\r\n        }, 2000);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"loginForm\">\r\n                <Form id=\"logonForm\">\r\n                    <h1>Log in</h1>\r\n                    <Label for='username'>Username or Email:</Label>\r\n                    <Input type=\"text\" onChange={this.handleEmail} id=\"username\" placeholder=\"Username or Email\" />\r\n                    <br />\r\n                    <Label for='password'>Password:</Label>\r\n                    <Input type=\"password\" onChange={this.handlePassword} id=\"password\" />  \r\n                    <br />\r\n                    <Button onClick={this.submitLogon} color=\"success\">Log in</Button>          \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport {\r\n    Form,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass RegisterPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitRegister = this.submitRegister.bind(this);\r\n    }\r\n\r\n    handleEmail(e) {\r\n        this.setState({email: e.target.value});\r\n    }\r\n    handleUsername(e) {\r\n        this.setState({username: e.target.value});\r\n    }\r\n    handlePassword(e) {\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    submitRegister() {\r\n        axios\r\n        .post('http://98.237.41.63:1337/auth/local/register', {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        })\r\n        .then(response => {\r\n            // Handle success.\r\n            console.log('Well done!');\r\n            localStorage.setItem('userprofile', response.data.user);\r\n            localStorage.setItem('token', response.data.jwt);\r\n            //console.log('User profile', response.data.user);\r\n            //console.log('User token', response.data.jwt);\r\n        })\r\n        .catch(error => {\r\n            // Handle error.\r\n            console.log('An error occurred:', error.response);\r\n        });\r\n        setTimeout(() => {\r\n            window.location.href = \"/\";\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"loginForm\">\r\n                <Form id=\"logonForm\">\r\n                    <h1>Register</h1>\r\n                    <Label for='username'>Username:</Label>\r\n                    <Input type=\"text\" onChange={this.handleEmail} id=\"username\" placeholder=\"Username\" />\r\n                    <br /> \r\n                    <Label for='email'>Email:</Label>\r\n                    <Input type=\"email\" onChange={this.handleUsername} id=\"email\" placeholder=\"Email Address\" />\r\n                    <br />\r\n                    <Label for='password'>Password:</Label>\r\n                    <Input type=\"password\" onChange={this.handlePassword} id=\"password\" />  \r\n                    <br />\r\n                    <Button onClick={this.submitRegister} color=\"success\">Log in</Button>          \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\n\r\nclass LogoutPage extends React.Component {\r\n\r\n    componentDidMount(){\r\n        localStorage.removeItem('token');\r\n        setTimeout(() => {\r\n            window.location.href = \"/\";\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogoutPage;","import React from 'react';\r\nimport Card1 from './Card1';\r\nimport { Badge } from 'reactstrap';\r\n\r\n\r\nclass Userpage extends React.Component {\r\n\r\n    state = {\r\n        Channels: [],\r\n        error: null\r\n      }\r\n    \r\n      // Fetch your restaurants immediately after the component is mounted\r\n      componentDidMount = async () => {\r\n        try {\r\n          let response = await JSON.parse(localStorage.getItem(\"channel\"));\r\n          this.setState({ Channels: response })\r\n        } catch(error) {\r\n          this.setState({ error })\r\n        }\r\n      }\r\n      render() {\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            {\r\n                this.state.Channels.map((channel, index) => {\r\n                    let result = [];\r\n                    if(window.location.href.split(\"/\")[4]){\r\n                        let user = window.location.href.split('/')[4]\r\n                        if(channel.name === user.replace(\"%20\", \" \")){\r\n                            channel.projects.map((project, index) => {\r\n                                console.log(project.name);\r\n                                 result[index] = <Card1 key={index} link={project.link} title={project.name} image={\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"} subTitle={<Badge color='success' pill>{channel.rank}</Badge>}/>\r\n                                })\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < channel.projects.length; i++) {\r\n                        return result\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Userpage;","import React from 'react';\nimport './App.css';\nimport Navbar1 from './Navbar';\n//import JumboInfo from './JumboInfo';\n//import CardWButton from './CardWButton';\nimport Footer1 from './Footer1';\nimport Homepage from './Homepage';\nimport LoginPage from './LoginPage';\nimport RegisterPage from './RegisterPage';\nimport LogoutPage from './LogoutPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Userpage from './Userpage';\n\n\nclass App extends React.Component {\n\n  render() {\n    \n    //console.log(localStorage.getItem('rank'))\n\n    return (\n      <Router>\n      <div className=\"App\">\n      <Navbar1 navbarBrand=\"Homebrew'd\"/>\n          <Switch>\n          <Route exact path=\"/u/:user\">\n            <Userpage />\n          </Route>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/logout\">\n            <LogoutPage />\n          </Route>\n\n          <Route exact path=\"/register\">\n            <RegisterPage />\n          </Route>\n            \n          </Switch>\n        <Footer1 />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}